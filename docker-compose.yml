version: '3'
services:
  #
  # Client
  #
  client:
    image: von-network-base
    command: ./scripts/start_client.sh
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - RUST_LOG=${RUST_LOG}
    networks:
      - von
    volumes:
      - client-data:/home/indy/.indy_client
      - ./tmp:/tmp

  #
  # Webserver
  #
  webserver:
    image: von-network-base
    command: bash -c 'sleep 10 && ./scripts/start_webserver.sh'
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
      - GENESIS_URL=${GENESIS_URL}
      - LEDGER_SEED=${LEDGER_SEED}
      - LEDGER_CACHE_PATH=${LEDGER_CACHE_PATH}
      - MAX_FETCH=${MAX_FETCH:-50000}
      - RESYNC_TIME=${RESYNC_TIME:-120}
      - POOL_CONNECTION_ATTEMPTS=${POOL_CONNECTION_ATTEMPTS:-5}
      - POOL_CONNECTION_DELAY=${POOL_CONNECTION_DELAY:-10}
      - REGISTER_NEW_DIDS=${REGISTER_NEW_DIDS:-True}
      - LEDGER_INSTANCE_NAME=${LEDGER_INSTANCE_NAME:-localhost}
      - WEB_ANALYTICS_SCRIPT=${WEB_ANALYTICS_SCRIPT}
      - INFO_SITE_TEXT=${INFO_SITE_TEXT}
      - INFO_SITE_URL=${INFO_SITE_URL}
      - INDY_SCAN_URL=${INDY_SCAN_URL}
      - INDY_SCAN_TEXT=${INDY_SCAN_TEXT}
    networks:
      - von
    ports:
      - ${WEB_SERVER_HOST_PORT:-9000}:8000
    volumes:
      - ./config:/home/indy/config
      - ./server:/home/indy/server
      - webserver-cli:/home/indy/.indy-cli
      - webserver-ledger:/home/indy/ledger

  #
  # Synchronization test
  #
  synctest:
    image: von-network-base
    command: ./scripts/start_synctest.sh
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    networks:
      - von
    ports:
      - ${WEB_SERVER_HOST_PORT:-9000}:8000
    volumes:
      - ./config:/home/indy/config
      - ./server:/home/indy/server
      - webserver-cli:/home/indy/.indy-cli
      - webserver-ledger:/home/indy/ledger

  #
  # Nodes
  #
  nodes:
    image: von-network-base
    command: ./scripts/start_nodes.sh
    networks:
      - von
    ports:
      - 18001:18001
      - 18002:18002
      - 18003:18003
      - 18004:18004
      - 18005:18005
      - 18006:18006
      - 18007:18007
      - 18008:18008
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    volumes:
      - nodes-data:/home/indy/ledger

  node1:
    image: von-network-base
    command: ./scripts/start_node.sh 1
    networks:
      - von
    ports:
      - 18001:18001
      - 18002:18002
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    volumes:
      - node1-data:/home/indy/ledger

  node2:
    image: von-network-base
    command: ./scripts/start_node.sh 2
    networks:
      - von
    ports:
      - 18003:18003
      - 18004:18004
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    volumes:
      - node2-data:/home/indy/ledger

  node3:
    image: von-network-base
    command: ./scripts/start_node.sh 3
    networks:
      - von
    ports:
      - 18005:18005
      - 18006:18006
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    volumes:
      - node3-data:/home/indy/ledger

  node4:
    image: von-network-base
    command: ./scripts/start_node.sh 4
    networks:
      - von
    ports:
      - 18007:18007
      - 18008:18008
    environment:
      - IP=${IP}
      - IPS=${IPS}
      - DOCKERHOST=${DOCKERHOST}
      - LOG_LEVEL=${LOG_LEVEL}
      - RUST_LOG=${RUST_LOG}
    volumes:
      - node4-data:/home/indy/ledger

networks:
  von:

volumes:
  client-data:
  webserver-cli:
  webserver-ledger:
  node1-data:
  node2-data:
  node3-data:
  node4-data:
  nodes-data:
